Arrays are ways to store elements in contiguous memory locations.

Advantages:
1. Store multiple elements in a single variable
2. Accessing would be easier as it is index based.

Disadvantages:
1. Adding and removing elements in middle would be difficult as we need to move rest of the elements into it corresponding locations

Common terms:

Subarray -
 A range of contiguous values within an array.
    Example: given an array [2, 3, 6, 1, 5, 4], [3, 6, 1] is a subarray while [3, 1, 5] is not a subarray.
Subsequence - 
 A sequence that can be derived from the given sequence by deleting some or no elements without changing the order of the remaining elements.
    Example: given an array [2, 3, 6, 1, 5, 4], [3, 1, 5] is a subsequence but [3, 5, 1] is not a subsequence.

Techniques to use in arrays:

1. Sliding Window 
    - Refer Techniques folder for more info
2. Two pointers 
    - Two pointers is a more general version of sliding window where the pointers can cross each other and can be on different arrays. 
    - Moving of the two pointers would be based on the problem criteria 
3. Traversing from Right
    - Sometimes you can traverse the array starting from the right instead of the conventional approach of from the left
4. Sorting
    - Sorting the array would always helps in some of the problems, we can use binary search approach to solve some problems but sorting will not
    be helpful if we need to retain the order
5. Precomputation
    - Problems where sum or multiplication of subarray is involved we can use the pre computed value or hash for further solving the problem
6. Index as a hash key
    -  f you are given a sequence and the interviewer asks for O(1) space, it might be possible to use the array itself as a hash table
